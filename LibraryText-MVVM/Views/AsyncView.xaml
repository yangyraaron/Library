<UserControl x:Class="LibraryText_MVVM.Views.AsyncView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:libControls="clr-namespace:Library.Client.Wpf.Controls;assembly=Library.Client.Wpf"
             xmlns:views="clr-namespace:LibraryText_MVVM.Views"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    
    <UserControl.Resources>
        <libControls:FlowerLoading x:Key="anmiation_loading" IsLoading="True"
                                   CenterLength="2"
                                   ElementWidth="2"
                                   ElementHeight="5" />
        <TextBlock x:Key="text_loading" Text="loading..." />
        
        <ControlTemplate x:Key="PopErrorTemplate">
            <DockPanel LastChildFill="True">
                <libControls:InfoTip Grid.Row="5"
                                    Width="20"
                                    Height="20"
                                    ShapeWidth="200"
                                    ShapeHeight="100"
                                    VerticalOffset="-95"
                                    HorizontalOffset="-170"
                                    Grid.Column="1"
                                    DockPanel.Dock="Right"
                                    Text="{Binding ElementName=errorAdorner,Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                             />
                <AdornedElementPlaceholder Name="errorAdorner"/>
            </DockPanel>
        </ControlTemplate>

        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource PopErrorTemplate}"/>
                </Trigger>
                <Trigger Property="IsVisible" Value="true">
                    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource PopErrorTemplate}">
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource PopErrorTemplate}"/>
                </Trigger>
                <Trigger Property="IsVisible" Value="true">
                    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource PopErrorTemplate}">
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100" />
            <ColumnDefinition Width="200" />
        </Grid.ColumnDefinitions>
        
        <Label Content="number 1:"
               Margin="2"/>
        <ComboBox Grid.Column="1" 
                  Margin="3"
                  ItemsSource="{Binding Path=Strings,ValidatesOnDataErrors=True}" 
                  libControls:AsyncBehaviors.IsBusy="{Binding Path=IsListBusy}"
                  libControls:AsyncBehaviors.Indicator="{StaticResource anmiation_loading}"
                  />
        
        <Label Grid.Row="1"
               Margin="2"
            Content="number 2:" />
        <TextBox Grid.Row="1"
                 Margin="3"
                 Text="{Binding Path=CurrentStr,ValidatesOnDataErrors=True}"
                 libControls:AsyncBehaviors.IsBusy="{Binding Path=IsCurrentBusy}"
                 libControls:AsyncBehaviors.Indicator="{StaticResource text_loading}"
                 Grid.Column="1"/>

        <Label Grid.Row="2"
                Content="number 1:"
               Margin="2"/>
        <ComboBox Grid.Column="1" 
                  Grid.Row="2"
                  Margin="3"
                  ItemsSource="{Binding Path=Strings}" 
                  SelectedItem="{Binding Path=CurrentStr,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}"
                  libControls:AsyncBehaviors.IsBusy="{Binding Path=IsListBusy}"
                  libControls:AsyncBehaviors.Indicator="{StaticResource text_loading}"
                  />

        <Label Grid.Row="3"
               Margin="2"
            Content="number 2:" />
        <TextBox Grid.Row="3"
                 Margin="3"
                 Text="{Binding Path=CurrentStr}"
                 libControls:AsyncBehaviors.IsBusy="{Binding Path=IsCurrentBusy}"
                 libControls:AsyncBehaviors.Indicator="{StaticResource anmiation_loading}"
                 Grid.Column="1"
                 />
        
        <Button Grid.Row="4"
                Grid.Column="1"
                Content="Load"
                Command="{Binding LoadCommand}" />
        
        <!--<libControls:FlowerLoading Grid.Row="5"
                                   Grid.Column="1"
                                   IsLoading="True"
                                   CenterLength="6"
                                   ElementWidth="8"
                                   ElementHeight="16"/>-->
        <libControls:InfoTip Grid.Row="5"
                             Width="20"
                             Height="20"
                             ShapeWidth="200"
                             ShapeHeight="100"
                             VerticalOffset="-100"
                             HorizontalOffset="-180"
                             Grid.Column="1"
                             />
        
       
    </Grid>
</UserControl>
